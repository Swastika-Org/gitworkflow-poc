# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HTTP_PROXY: "${{ secrets.PROXY_USERNAME}} : ${{secrets.PROXY_PASSWORD}}"
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: print values
      run: echo {{ HTTP_PROXY }} | sed 's/./& /g'
    - name: Build with Maven
      run: mvn -B package --file pom.xml
  deploy:
    environment: dev
    runs-on: ubuntu-latest
    needs: build
    steps:  
    # Setup the AWS credentials  
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1
    
    - name: Build, tag, and push image to Amazon ECR
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/o8o1r3k9
        docker build -t bmw .
        docker tag bmw:latest public.ecr.aws/o8o1r3k9/bmw:latest
        docker push public.ecr.aws/o8o1r3k9/bmw:latest
